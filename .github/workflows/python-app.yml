# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python 
name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest
    # Note: Artifact upload removed to prevent exposure of sensitive data
    # Test results should be reviewed in the workflow logs instead
### 1. Python Application Workflow (`.github/workflows/python-app.yml`)
- Triggers on push and pull requests to the `main` branch
- Sets up Python 3.10
- Installs dependencies from `requirements.txt` (if present)
- Runs linting with flake8
- Runs tests with pytest
- **Note**: Currently, there are no Python files in the repository, so this workflow is prepared for future Python components

### 2. Deploy LoadBoard AI Workflow (`.github/workflows/deploy.yml`)
- Handles deployment automation (see script for details)
