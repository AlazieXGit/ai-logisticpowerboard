; LoadBoard AI Supervisor Configuration
; Manages all development processes

[unix_http_server]
file=/tmp/supervisor.sock   ; path to your socket file

[supervisord]
logfile=/tmp/supervisord.log ; supervisord log file
logfile_maxbytes=50MB       ; maximum size of logfile before rotation
logfile_backups=10          ; number of backed up logfiles
loglevel=info               ; info, debug, warn, trace
pidfile=/tmp/supervisord.pid ; pidfile location
nodaemon=false              ; run supervisord as a daemon
minfds=1024                 ; number of startup file descriptors
minprocs=200                ; number of process descriptors
user=runner                 ; default user
childlogdir=/tmp            ; where child log files will live

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///tmp/supervisor.sock ; use a unix:// URL for a unix socket

; Vite Development Server (npm run dev)
[program:vite-dev]
command=npm run dev
directory=/home/runner/work/ai-logisticpowerboard/ai-logisticpowerboard
autostart=true
autorestart=true
stderr_logfile=/tmp/vite-dev.err.log
stdout_logfile=/tmp/vite-dev.out.log
environment=NODE_ENV="development"

; Preview Server
[program:previewserver]
command=bash -c "sleep 5 && npm run preview"
directory=/home/runner/work/ai-logisticpowerboard/ai-logisticpowerboard
autostart=true
autorestart=true
stderr_logfile=/tmp/previewserver.err.log
stdout_logfile=/tmp/previewserver.out.log
environment=NODE_ENV="production"

; Capra Management Server
[program:capra-management-server]
command=/home/runner/work/ai-logisticpowerboard/ai-logisticpowerboard/scripts/capra-management-server.sh
directory=/home/runner/work/ai-logisticpowerboard/ai-logisticpowerboard
autostart=true
autorestart=true
stderr_logfile=/tmp/capra-management-server.err.log
stdout_logfile=/tmp/capra-management-server.out.log

; nixd - Nix Language Server (optional, only if nixd is installed)
[program:nixd]
command=bash -c "if command -v nixd &> /dev/null; then nixd; else echo 'nixd not installed, skipping' && sleep infinity; fi"
directory=/home/runner/work/ai-logisticpowerboard/ai-logisticpowerboard
autostart=true
autorestart=true
stderr_logfile=/tmp/nixd.err.log
stdout_logfile=/tmp/nixd.out.log

; VSCode (code-oss) - optional, only if code/code-oss is installed
[program:code-oss]
command=bash -c "if command -v code &> /dev/null; then code --wait /home/runner/work/ai-logisticpowerboard/ai-logisticpowerboard; elif command -v code-oss &> /dev/null; then code-oss --wait /home/runner/work/ai-logisticpowerboard/ai-logisticpowerboard; else echo 'VSCode not installed, skipping' && sleep infinity; fi"
directory=/home/runner/work/ai-logisticpowerboard/ai-logisticpowerboard
autostart=false
autorestart=false
stderr_logfile=/tmp/code-oss.err.log
stdout_logfile=/tmp/code-oss.out.log
